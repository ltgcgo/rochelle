"use strict";let y=["utf-8","utf-16","utf-16be"],c=(i,l)=>{i.unsent=!1,i.enqueue(l)},T=class{static SPLIT_UTF_8=0;static SPLIT_UTF_16_LE=1;static SPLIT_UTF_16_BE=2;static lineRaw(i,l=0){if(l?.constructor!==Number||l<0||l>=y.length)throw new TypeError("Invalid split mode");if(l)throw new Error("UTF-16LE/BE currently not implemented");if(!i||i?.constructor!==ReadableStream)throw new TypeError("Not a readable stream");let w=i.getReader(),a,d=!1,e=[],t=0,r=0,m=0;return new ReadableStream({pull:async f=>{for(f.unsent=!0;f.unsent;){if(!a||t>=a.length){t>r&&(e.push(a.subarray(r)),r=0);let{value:h,done:s}=await w.read();a=h,d=s,t=0}if(a){let h=a[t],s=!1;switch(h){case 10:{m===13?r++:s=!0;break}case 13:{s=!0;break}}if(s){if(e.length){e.push(a.subarray(r,t));let g=0;for(let u=0;u<e.length;u++)g+=e[u].length;let n=new Uint8Array(g),b=0;for(let u=0;u<e.length;u++)n.set(e[u],b),b+=e[u].length;c(f,n),e=[]}else c(f,a.subarray(r,t));r=t+1}m=h}if(d){if(r!==t&&a&&e.push(a.subarray(r,t)),e.length){let h=0;for(let n=0;n<e.length;n++)h+=e[n].length;let s=new Uint8Array(h),g=0;for(let n=0;n<e.length;n++)s.set(e[n],g),g+=e[n].length;c(f,s)}f.unsent=!1,f.close()}t++}}},new ByteLengthQueuingStrategy({highWaterMark:256}))}static line(i,l=0,w){let a=this.lineRaw(i,l).getReader(),d=new TextDecoder(w||y[l]);return new ReadableStream({pull:async e=>{let{value:t,done:r}=await a.read();t&&e.enqueue(d.decode(t)),r&&e.close()}})}},L=T;export{L as default};
